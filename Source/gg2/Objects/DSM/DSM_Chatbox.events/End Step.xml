<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="2">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (!instance_exists(InGameMenuController) &amp;&amp; !instance_exists(OptionsController) &amp;&amp; !instance_exists(ControlsController) &amp;&amp; !instance_exists(HUDOptionsController)) and !instance_exists(Console) || instance_exists(global.cheatycheat) {

if room==DownloadRoom{
    instance_destroy()
}

if keyboard_check_pressed(global.dsmChatHideButton) and open==0{
    if visible==1{
        visible=0
    }else if visible==0{
        visible=1
    }
}

if keyboard_check_pressed(global.dsmChatToggle) and !open and visible==1{
    if !open hidden = !hidden;
    idle = false;
    alarm[0]=idleTime;
}else if keyboard_check_pressed(global.dsmChatGlobal) and !open and visible==1{
    open = true;
    hidden = false;
    keyboard_string="";
    team = false;
    instance_create(0,0,global.cheatycheat);
}else if keyboard_check_pressed(global.dsmChatTeam) and /*global.myself.team != TEAM_SPECTATOR and*/ !open and visible==1{
    open = true;
    hidden = false;
    keyboard_string="";
    team = true;
    instance_create(0,0,global.cheatycheat);
}else if open and keyboard_check_pressed(vk_enter) and visible==1{
    with(global.cheatycheat) instance_destroy();
    if keyboard_string != ""{
        _message = keyboard_string;
        if global.isHost{
            _player = global.myself;
            if team == true _team = global.myself.team+1;
            else _team = 0
            event_user(1); //process our own message
            event_user(2); //send our own message to the clients
            event_user(4); //add our own message to the chatbox
        }else{
            _team = team;
            event_user(3); //send a message as a client
        }
        keyboard_string="";
    }
    open = false;
    team = false;
    idle = false;
    if global.dsmAutocloseChat==1{
        hidden=true
    }else{
        hidden=false
    }
    alarm[0]=idleTime;
}
}
    
if open{        
    image_index = 1;
    global.dsmTyping=1
    if (keyboard_check_pressed(vk_up) or mouse_wheel_up()) and ds_list_size(global.chatLog) &gt; 9 offset = min(ds_list_size(global.chatLog)-10,offset+1);
    else if keyboard_check_pressed(vk_down) or mouse_wheel_down() offset = max(0,offset-1);
}else{
    image_index = 0;
    global.dsmTyping=0
}

if keyboard_check_released(vk_escape){
    keyboard_string = "";
}
    
if global.isHost{
    event_user(0); //forward messages as a host
}else event_user(6); //read messages as a client
</argument>
      </arguments>
    </action>
  </actions>
</event>
